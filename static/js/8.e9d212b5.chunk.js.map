{"version":3,"sources":["components/Login.js"],"names":["Login","useState","islogin","setLogin","useForm","mode","register","handleSubmit","errors","watch","reset","err","setError","history","useHistory","sameEmail","user","values","email","password","userData","sessionStorage","setItem","JSON","stringify","push","setTimeout","diffEmail","useEffect","confirmPassword","clearError","className","role","aria-label","type","onClick","onSubmit","users","parse","localStorage","getItem","likeVDO","dislikeVDO","saveVDO","createUser","Users","newUser","htmlFor","name","ref","required","pattern","value","message","placeholder","minLength","validate"],"mappings":"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","file":"static/js/8.e9d212b5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login() {\n\n  const [islogin, setLogin] = useState(true);\n  let { register, handleSubmit, errors, watch, reset } = useForm({ mode: 'onChange'});\n  let [err, setError] = useState(false);\n  let userCreated  = true;\n\n  let history = useHistory(); \n\n  const sameEmail = (user, values) => {\n\n    if(islogin){\n      \n      if(user.email === values.email && user.password === values.password){\n        let userData = {\n          email: user.email,\n          password: user.password\n        }\n        sessionStorage.setItem('user', JSON.stringify(userData))\n        history.push('/home');\n        reset();\n        return;\n      } \n      else {\n        setError('Please enter correct email and password.');\n\n        setTimeout(() => {\n          setError('')\n        }, 2000)\n\n        reset();\n        return;\n      }\n    } \n    else {\n      setError('User with this email already exist.');\n\n      setTimeout(() => {\n        setError('')\n      }, 2000)\n\n      reset();\n      }\n  } \n\n  const diffEmail = (user, values) => {\n    if(islogin){\n      setError('User with this email does not exist.');\n\n        setTimeout(() => {\n          setError('')\n        }, 2000)\n\n        reset();\n        return;\n    } \n  }\n\n  const newUser = (values) => {\n    if(!islogin){\n\n      let user = {\n        email: values.email,\n        password: values.password,\n        likeVDO: [],\n        dislikeVDO: [],\n        saveVDO: []\n      }\n\n      let Users = [];\n      Users.push(user);\n      localStorage.setItem('users', JSON.stringify(Users));\n      \n      reset();\n      setLogin(true);\n      return;\n    } else {\n      setError('You need to sign in first.');\n\n      setTimeout(() => {\n        setError('')\n      }, 2000)\n\n      reset();\n      return;\n    }\n  }\n\n  const createUser = (values) => {\n    if(!islogin){\n\n    let user = {\n      email: values.email,\n      password: values.password,\n      likeVDO: [],\n      dislikeVDO: [],\n      saveVDO: []\n    }\n\n    let users = JSON.parse(localStorage.getItem('users'));\n    users.push(user);\n    localStorage.setItem('users', JSON.stringify(users));\n    setLogin(true);\n\n    reset();\n    return;\n    }\n  }\n \n  const Submit = values => {\n\n    let users = JSON.parse(localStorage.getItem('users'));\n\n    if(users){\n      for(let user of users){\n        if(user.email === values.email){\n          sameEmail(user, values);\n          return;\n        } else {\n          diffEmail(user, values);\n        }\n      }\n    } else {\n      newUser(values);\n      return;\n    }\n\n    if(userCreated){\n      createUser(values);\n    } \n  }\n\n  const clearError = (errors) => {\n    setTimeout(() => {\n      errors.email = null\n      errors.password = null\n      errors.confirmPassword = null\n    }, 1000)\n  }\n\n  useEffect(() => {\n    clearError(errors)\n  }, [errors])\n\n  return (\n    <section>\n    <div className=\"row content\">\n      <div className=\"col login-bg d-lg-block d-none\"></div>\n      <div className=\"col login-area py-md-5 py-3 bg-light d-flex flex-column justify-content-center align-items-center text-dark\">\n          <div className=\"w-100 p-lg-3 p-2\">\n            <h1 className=\"font-weight-bold mb-4\"><span className=\"text-danger\">VDO</span>VOO</h1>\n            <div className=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\">\n\n              <button \n              type=\"button\" \n              onClick={() => setLogin(true)}\n              className={ islogin ? \"btn btn-sm btn-secondary\" : \"btn btn-sm btn-outline-secondary\"}\n              >\n                Login\n              </button>\n\n              <button \n              type=\"button\" \n              onClick={() => setLogin(false)}\n              className={ islogin ? \"btn btn-sm btn-outline-secondary\" : \"btn btn-sm btn-secondary\"}\n              >\n                SignUp\n              </button>\n\n            </div>\n          </div>\n        <form className=\"form w-100 p-lg-3 p-2\" onSubmit={handleSubmit(Submit)}>\n          <div className=\"my-3\">\n            <label htmlFor=\"email\">Email</label>\n            <input \n              type=\"email\" \n              name=\"email\"\n              ref={\n                register({\n                  required: 'Email is required.',\n                  pattern: {\n                    value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n                    message: 'Invalid email address'\n                  }\n                })\n              }\n              placeholder=\"johndoe@gmail.com\" \n              className=\"form-control\" />\n              {\n                errors.email && <small className=\"text-danger\">{errors.email.message}</small>\n              }\n              \n              \n          </div>\n          <div className=\"my-3\">\n            <label htmlFor=\"password\">Password</label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              ref={\n                register({\n                  required: 'Password is required.',\n                  minLength: {\n                    value: 5,\n                    message: 'Password should be 5 characters long.'\n                  }\n                })\n              }\n              placeholder=\"**************\" \n              className=\"form-control\" />\n              {\n                errors.password && <small className=\"text-danger\">{errors.password.message}</small>\n              }\n          </div>\n          {\n            !islogin ? \n            <div className=\"my-3\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input \n                type=\"password\" \n                name=\"confirmPassword\" \n                ref={\n                  register({\n                    required: 'Confirm your password',\n                    validate: (value) => value === watch('password') || \"Passwords don't match.\"\n                  })\n                }\n                placeholder=\"**************\" \n                className=\"form-control\" />\n                { (!islogin && errors.confirmPassword) && <small className=\"text-danger\">{errors.confirmPassword.message}</small> }\n            </div>\n            : \n            ''\n          }\n          \n          { err && <small className=\"text-danger\">{err}</small>}\n          <button type=\"submit\" className=\"btn w-100 p-2 mt-2 submit-btn\">\n            {islogin ? 'Login' : 'Sign Up'}\n          </button>\n        </form>\n      </div>\n    </div>\n  </section>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}